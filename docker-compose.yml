version: '3.9'

services:

  frontendapp:
    container_name: react-frontend
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/src:/app/src:ro
    depends_on:
      - redis
      - db
      - celery

  backendapp:
    container_name: django-backend
    build:
      context: ./backend
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./backend/app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    # python manage.py initialize_db &&
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=password
    depends_on:
      - db
      - redis

  redis:
    container_name: redis
    image: redis:7.0.11-alpine

  celery:
    container_name: celery
    build:
      context: ./backend
      args:
        - DEV=true
    command: celery --app=app worker -l INFO
    volumes:
      - ./backend/app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=password
    depends_on:
      - db
      - redis

  celery-beat:
    container_name: celery-beat
    build:
      context: ./backend
      args:
        - DEV=true
    command: celery -A app beat -l INFO
    volumes:
      - ./backend/app:/app
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=password
    depends_on:
      - db
      - redis

  db:
    container_name: postgres-db
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=password

volumes:
  dev-db-data:
